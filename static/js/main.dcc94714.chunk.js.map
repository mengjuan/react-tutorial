{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","this","Component","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","htmlFor","type","id","onChange","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"0NAEMA,EAAc,WAClB,OACE,+BACE,4BACE,oCACA,sCAMFC,EAAY,SAACC,GAClB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAIC,GACzC,OACC,wBAAIC,IAAKD,GACR,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACC,4BAAQC,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,eAMH,OAAO,+BAAQJ,IAiBFU,E,uKAbL,IAAD,EACiCC,KAAKZ,MAAtCE,EADA,EACAA,cAAcQ,EADd,EACcA,gBAElB,OACA,+BACM,kBAAC,EAAD,MACN,kBAAC,EAAD,CAAWR,cAAeA,EAAeQ,gBAAiBA,S,GAP3CG,a,OCSLC,E,4MAnCdC,aAAe,CACdR,KAAM,GACNC,IAAK,I,EAENQ,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GAAW,IAAD,EACHA,EAAMC,OAArBZ,EADkB,EAClBA,KAAMa,EADY,EACZA,MAEb,EAAKC,SAAL,eACEd,EAAOa,K,EAIVE,WAAa,WACZ,EAAKtB,MAAMuB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,uDAGV,IAAD,EACYH,KAAKI,MAAlBT,EADC,EACDA,KAAMC,EADL,EACKA,IAEb,OACC,8BACC,2BAAOgB,QAAQ,QAAf,QACA,2BAAOC,KAAK,OAAOlB,KAAK,OAAOmB,GAAG,OAAON,MAAOb,EAAMoB,SAAUf,KAAKK,eACrE,2BAAOO,QAAQ,OAAf,OACA,2BAAOC,KAAK,OAAOlB,KAAK,MAAMmB,GAAG,MAAMN,MAAOZ,EAAKmB,SAAUf,KAAKK,eAClE,2BAAOQ,KAAK,SAASL,MAAM,SAASX,QAASG,KAAKU,kB,GA7BnCT,aCoCJe,E,4MAjCZZ,MAAQ,CACNa,WAAY,I,EAGdnB,gBAAkB,SAACL,GAAW,IACrBwB,EAAc,EAAKb,MAAnBa,WAEP,EAAKR,SAAS,CACbQ,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACzC,OAAOA,IAAM3B,Q,EAMjBkB,aAAe,SAACQ,GACd,EAAKV,SAAS,CAACQ,WAAW,GAAD,mBAAM,EAAKb,MAAMa,YAAjB,CAA6BE,O,uDAGjD,IACEF,EAAcjB,KAAKI,MAAnBa,WAEV,OACC,yBAAKI,UAAU,aACd,8CACA,kFACA,kBAAC,EAAD,CAAO/B,cAAe2B,EAAYnB,gBAAmBE,KAAKF,kBAC1D,kBAAC,EAAD,CAAMa,aAAcX,KAAKW,oB,GA5BXV,a,MCElBqB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.dcc94714.chunk.js","sourcesContent":["import React , {Component} from 'react';\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n      </tr>\n    </thead>\n  )\n}\n\nconst TableBody = (props) => {\n\tconst rows = props.characterData.map((row,index) => {\n\t\treturn (\n\t\t\t<tr key={index}>\n\t\t\t\t<td>{row.name}</td>\n\t\t\t\t<td>{row.job}</td>\n\t\t\t\t<td>\n\t\t\t\t\t<button onClick={() => props.removeCharacter(index)}>Delete</button>\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t)\n\t}\n\t)\n  return <tbody>{rows}</tbody>\n}\n\nclass Table extends Component {\n\trender(){\n\t\tconst {characterData,removeCharacter} = this.props\n\n\t    return (\n\t\t   <table>\n\t          <TableHeader />\n\t\t\t  <TableBody characterData={characterData} removeCharacter={removeCharacter}/>\n\t       </table>\n\t\t)\n\t}\n\n}\n\nexport default Table","import React, {Component} from 'react'\n\nclass Form extends Component {\n\tinitialState = {\n\t\tname: '',\n\t\tjob: ''\n\t}\n\tstate = this.initialState\n\n\thandleChange = (event) => {\n\t\tconst {name, value} = event.target\n\n\t\tthis.setState({\n\t\t\t[name]: value,\n\t\t})\n\t}\n\n\tsubmitForm = () => {\n\t\tthis.props.handleSubmit(this.state)\n\t\tthis.setState(this.initialState)\n\t}\n\n\trender() {\n\t\tconst {name, job} = this.state;\n\n\t\treturn (\n\t\t\t<form>\n\t\t\t\t<label htmlFor=\"name\">Name</label>\n\t\t\t\t<input type=\"text\" name=\"name\" id=\"name\" value={name} onChange={this.handleChange}/>\n\t\t\t\t<label htmlFor=\"job\">Job</label>\n\t\t\t\t<input type=\"text\" name=\"job\" id=\"job\" value={job} onChange={this.handleChange} />\n\t\t\t\t<input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n\t\t\t</form>\n\n\t\t)\n\t}\n}\n\nexport default Form","import React , {Component} from 'react';\nimport Table from './Table'\nimport Form from './Form'\n\nclass App extends Component {\n   state = {\n   \t characters: [],\n   }\n\n   removeCharacter = (index) => {\n   \t const {characters} = this.state\n\n   \t this.setState({\n   \t \tcharacters: characters.filter((character, i) =>{\n   \t \t\treturn i !== index\n   \t \t})\n   \t })\n\n   }\n\n   handleSubmit = (character) => {\n   \t this.setState({characters: [...this.state.characters, character]})\n   }\n\n\trender(){\n\t    const {characters} = this.state\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\t\t\t\t<h1>React Tutorial</h1>\n\t\t\t\t<p>Add a character with a name and a job to the table.</p>\n\t\t\t\t<Table characterData={characters} removeCharacter = {this.removeCharacter}/>\n\t\t\t\t<Form handleSubmit={this.handleSubmit}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}